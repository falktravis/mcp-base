### mcp_pro_tests.http

# --- Variables ---
@host = http://localhost:3001
@managementApiBasePath = /api
@mcpGatewayBasePath = /mcp/gateway

# --- Authentication (Uncomment and set if needed) ---
@apiKey = YOUR_API_KEY_HERE
# @bearerToken = Bearer {{apiKey}}

# --- Marketplace Server ID (Set this after installing from marketplace) ---
@marketplaceServerQualifiedName = @upstash/context7-mcp
@encodedMarketplaceServerQualifiedName = @upstash%2Fcontext7-mcp

# --- Installed Server ID (Set this from the response of the install request) ---
@installedServerId = 1e74ba7e-e30b-40cb-9055-356895dd11e9

# --- Gateway Tool Prefix (Derived from @installedServerId by removing hyphens and lowercasing) ---
# Example: if @installedServerId is '1e74ba7e-e30b-40cb-9055-356895dd11e9',
# then @gatewayToolPrefix is '1e74ba7ee30b40cb9055356895dd11e9' (hyphens removed).
# This must match how CentralGatewayMCPService generates it (server.name or server.id, processed).
# Adjust if your server has a 'name' field that results in a different prefix,
# or if the ID used by the gateway for prefixing is different.
@gatewayToolPrefix = 1e74ba7ee30b40cb9055356895dd11e9

# --- GUID for Initialize Request ---
@init_guid = {{$guid}}


### 1. Install Server from Marketplace
# This request installs the server. Run it once.
# Then, copy the "id" from the response data and paste it into the @installedServerId variable above.
POST {{host}}{{managementApiBasePath}}/marketplace/items/{{encodedMarketplaceServerQualifiedName}}/install
Content-Type: application/json

{}

### 2. Start the Installed Server
# Requires @installedServerId to be set from the previous step's response.
# Uncomment Authorization header if auth is enabled.
POST {{host}}{{managementApiBasePath}}/servers/{{installedServerId}}/start
Content-Type: application/json
# Authorization: {{bearerToken}}

{}

### 3a. Initialize Session with Gateway
# This request authenticates with the gateway and establishes a session.
# Requires @apiKey to be uncommented and set.
# @name: initGatewaySession
POST {{host}}{{mcpGatewayBasePath}}
Content-Type: application/json
Accept: application/json, text/event-stream

{
    "jsonrpc": "2.0",
    "method": "initialize",
    "params": {},
    "id": "{{init_guid}}"
}

### 3b. Test MCP Gateway - Resolve Library ID
# Requires successful execution of "3a. Initialize Session with Gateway".
# Uses the sessionId obtained from the initialize request.
# Tool name is prefixed based on the server managing 'resolve-library-id'.
POST {{host}}{{mcpGatewayBasePath}}
Content-Type: application/json
X-MCP-Session-ID: {{initGatewaySession.response.body.result.sessionId}}

{
    "jsonrpc": "2.0",
    "method": "tools/call",
    "params": {
        "name": "{{gatewayToolPrefix}}__resolve-library-id",
        "arguments": {
            "libraryName": "react"
        }
    },
    "id": "{{$guid}}"
}

### 4. Get Server Status
# Useful for checking if the server is running.
# Requires @installedServerId to be set.
# Uncomment Authorization header if auth is enabled.
GET {{host}}{{managementApiBasePath}}/servers/{{installedServerId}}/status
# Authorization: {{bearerToken}}
