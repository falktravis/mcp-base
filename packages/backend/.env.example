# packages/backend/.env.example

# Application Configuration
NODE_ENV=development
PORT=3001 # Port for the backend server

# Database (PostgreSQL)
# Connection string format: postgresql://USER:PASSWORD@HOST:PORT/DATABASE
DATABASE_URL="postgresql://postgres:password@localhost:5432/mcp_pro_db?schema=public"

# JWT / Authentication Secrets (replace with strong random strings)
# Used for signing user session tokens, API key encryption etc.
JWT_SECRET="your-super-secret-jwt-key"
# Example: openssl rand -hex 32

# API Key Configuration (if specific settings are needed beyond JWT)
# API_KEY_SECRET="another-super-secret-for-api-keys"

# CORS Configuration
# Define the allowed origins for CORS. Use comma-separated values for multiple origins.
# Use "*" for allowing all origins (not recommended for production without careful consideration).
CORS_ALLOWED_ORIGINS="http://localhost:3000" # Assuming frontend runs on port 3000

# Logging Configuration (optional)
LOG_LEVEL="info" # e.g., error, warn, info, http, verbose, debug, silly

# Central Gateway MCP Service Configuration (if any specific env vars are needed)
# MCP_GATEWAY_TIMEOUT=30000 # Example: Timeout in milliseconds for requests to managed servers

# Email Service (if password resets, notifications etc. are implemented)
# SMTP_HOST=
# SMTP_PORT=
# SMTP_USER=
# SMTP_PASS=
# SMTP_FROM_EMAIL=

# Placeholder for other service-specific configurations
# For example, if MarketplaceService needs an API key for an external registry:
# MARKETPLACE_REGISTRY_URL=
# MARKETPLACE_API_KEY=
