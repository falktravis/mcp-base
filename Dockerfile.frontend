# Dockerfile.frontend

# Base image
FROM node:22-alpine AS base

# Set working directory
WORKDIR /usr/src/app

# --- Development Stage ---
FROM base AS development

# Copy root package.json and lockfile
COPY package.json package-lock.json ./

# Create package directories and copy their manifests
RUN mkdir -p packages/frontend packages/shared-types
COPY packages/frontend/package.json ./packages/frontend/
COPY packages/shared-types/package.json ./packages/shared-types/

# Install dependencies first
RUN npm ci

# Copy the rest of the monorepo source code
COPY . .

# Ensure TypeScript base config is always present in the container
COPY tsconfig.base.json ./tsconfig.base.json

# Set default command for development (will be overridden by docker-compose)
CMD [ "npm", "run", "dev", "--workspace=frontend" ]

# --- Builder Stage ---
FROM base AS builder

# Copy root package.json and lockfile
COPY package.json package-lock.json ./

# Create package directories and copy their manifests
RUN mkdir -p packages/frontend packages/shared-types
COPY packages/frontend/package.json ./packages/frontend/
COPY packages/shared-types/package.json ./packages/shared-types/

# Copy the rest of the monorepo source code
COPY . .

# Ensure TypeScript base config is always present in the container
COPY tsconfig.base.json ./tsconfig.base.json

# Install dependencies for frontend and its dependencies
RUN npm install

# Build shared-types first
RUN npm run build --workspace=shared-types

# Build frontend
RUN npm run build --workspace=frontend


# --- Production Stage ---
FROM node:22-alpine AS production

WORKDIR /usr/src/app

ENV NODE_ENV=production

# Copy root package.json (needed for workspace structure)
COPY package.json ./
# Copy frontend package.json (needed for npm start --workspace=frontend)
COPY packages/frontend/package.json ./packages/frontend/

# Copy production dependencies from builder stage
COPY --from=builder /usr/src/app/node_modules ./node_modules

# Copy built frontend application and shared-types from builder stage
COPY --from=builder /usr/src/app/packages/frontend ./packages/frontend
COPY --from=builder /usr/src/app/packages/shared-types ./packages/shared-types

# Expose port
EXPOSE 3000

# Set environment variables (can be overridden)
ARG NEXT_PUBLIC_API_URL
ENV NEXT_PUBLIC_API_URL=${NEXT_PUBLIC_API_URL}

# Start command for frontend
CMD ["npm", "start", "--workspace=frontend"]
