version: '3.8'

services:
  postgres:
    image: postgres:15
    restart: always
    environment:
      POSTGRES_USER: mcp_pro_user
      POSTGRES_PASSWORD: mcp_pro_password
      POSTGRES_DB: mcp_pro_db
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"

  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    restart: always
    depends_on:
      - postgres
    ports:
      - "3001:3001"
    environment:
      DATABASE_URL: postgresql://mcp_pro_user:mcp_pro_password@postgres:5432/mcp_pro_db?schema=public
      NODE_ENV: development # Change to production for actual deployments
      # Add other backend environment variables here
    volumes:
      - ./packages/backend:/usr/src/app/packages/backend
      - ./packages/shared-types:/usr/src/app/packages/shared-types
      # For development, mount node_modules from host to container to avoid reinstalling on every change
      # - ./packages/backend/node_modules:/usr/src/app/packages/backend/node_modules
    command: npm run dev --workspace=backend

  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    restart: always
    ports:
      - "3000:3000"
    environment:
      NEXT_PUBLIC_API_URL: http://localhost:3001 # URL of the backend
      NODE_ENV: development # Change to production for actual deployments
      # Add other frontend environment variables here
    volumes:
      - ./packages/frontend:/usr/src/app/packages/frontend
      - ./packages/shared-types:/usr/src/app/packages/shared-types
      # For development, mount node_modules from host to container to avoid reinstalling on every change
      # - ./packages/frontend/node_modules:/usr/src/app/packages/frontend/node_modules
    depends_on:
      - backend
    command: npm run dev --workspace=frontend

volumes:
  postgres_data:
